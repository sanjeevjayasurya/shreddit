"Build a web application called 'Infinite Shredder', where users can upload a PDF, JPG, or PNG file and watch a 2D animation of it being shredded by a virtual shredding machine. The application should have the following features:

Core Features:
File Upload System:

Users can upload PDFs, JPGs, or PNGs via a drag-and-drop area or a file selection button.

Display a preview of the uploaded file before shredding.

2D Shredder Machine Animation:

Display a fun, cartoonish 2D illustration of a shredder with exaggerated and playful animations.

The uploaded document should move towards the shredder slot when shredding starts.

The shredder should have rotating blades or a visual shredding effect with playful animations (e.g., exaggerated bounce, squash & stretch effects).

Shredding Process Animation:

As the document enters the shredder, animate it being sliced into pieces and falling below.

The shredded pieces should retain recognizable elements of the original document (e.g., visible bits of text or images).

The animation should use CSS, SVG, or Canvas (HTML5) for smooth effects.

Add cartoon-style effects, such as dust puffs, small wobbles, or exaggerated tearing effects.

Multiple Shredding Modes:

Strip Cut Mode: The document is sliced into long vertical strips.

Cross Cut Mode: The document is diced into tiny rectangular confetti.

Crazy Cut Mode (optional): The document gets shredded into playful, irregular shapes.

Fun Sound Effects & Reactions:

Play a satisfying paper shredding sound while the document is being shredded.

Add cartoon sound effects like a “swoosh” as the document enters, or a “pop” when it’s fully shredded.

Show funny facial expressions on the shredder (e.g., eyes that change expressions based on shredding progress).

Optional Restore Feature:

Provide a ‘Magic Restore’ button that reconstructs the document with a playful animation.

Show a fun effect like light sparkles or a cartoon ‘reverse’ sound when restoring the document.

Mobile Responsiveness:

The web app should be fully responsive and optimized for mobile devices, tablets, and desktops.

The UI should adapt dynamically, ensuring that the shredding animation works smoothly on touchscreens and smaller screens.

Add touch-friendly interactions like dragging the document into the shredder manually for a more interactive experience.

User Interface & Controls:

A cartoonish, playful UI with bold colors, exaggerated buttons, and friendly animations.

Use fun, rounded fonts and bright, inviting colors.

A progress bar with a fun face or reaction to indicate the shredding process.

Animated buttons that wobble or bounce when hovered.

Tech Stack Suggestions:
Frontend: HTML, CSS, JavaScript (or React)

2D Animation: CSS animations, Canvas API, or GSAP (GreenSock Animation Platform)

File Handling: PDF.js (for rendering PDFs before shredding)

Responsive Design: CSS Media Queries & Flexbox/Grid for layout adjustments

"Ensure that the animation is smooth, the shredded pieces resemble the original document, and the application has a fun, engaging, and cartoonish feel that makes the shredding process enjoyable."